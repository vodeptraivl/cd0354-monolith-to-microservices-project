apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-user
spec:
  selector:
    matchLabels:
      run: backend-user
  replicas: 2
  template:
    metadata:
      labels:
        run: backend-user
    spec:
      containers:
      - name: backend-user
        image: docker.io/volavl/udagram-api-user:latest
        imagePullPolicy: Always
        resources:
          requests:
              memory: "64Mi"
              cpu: "250m"
          limits:
            memory: "2048Mi"
            cpu: "500m"
        env:
          - name: POSTGRES_USERNAME
            valueFrom:
                configMapKeyRef:
                    name: env-secret
                    key: POSTGRES_USERNAME
          - name: POSTGRES_PASSWORD
            valueFrom:
                configMapKeyRef:
                    name: env-secret
                    key: POSTGRES_PASSWORD
          - name: POSTGRES_DB
            valueFrom:
                configMapKeyRef:
                    name: env-config
                    key: POSTGRES_DB
          - name: POSTGRES_HOST
            valueFrom:
                configMapKeyRef:
                    name: env-config
                    key: POSTGRES_HOST
          - name: AWS_REGION
            valueFrom:
                configMapKeyRef:
                    name: env-config
                    key: AWS_REGION
          - name: AWS_PROFILE
            valueFrom:
                configMapKeyRef:
                    name: env-config
                    key: AWS_PROFILE
          - name: AWS_BUCKET
            valueFrom:
                configMapKeyRef:
                    name: env-config
                    key: AWS_BUCKET
          - name: JWT_SECRET
            valueFrom:
                configMapKeyRef:
                    name: env-config
                    key: JWT_SECRET
        ports:
          - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: backend-user
  labels:
    run: backend-user
spec:
    ports:
      - port: 8080
        protocol: TCP
    selector:
      run: backend-user
