apiVersion: apps/v1
kind: Deployment
metadata:
  name: reverseproxy
spec:
  selector:
    matchLabels:
      run: reverseproxy
  replicas: 2
  template:
    metadata:
      labels:
        run: reverseproxy
    spec:
      containers:
        - name: reverseproxy
          image: docker.io/volavl/reverseproxy:latest
          imagePullPolicy: Always
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "1024Mi"
              cpu: "500m"
          env:
            - name: POSTGRES_USERNAME
              valueFrom:
                  configMapKeyRef:
                      name: env-secret
                      key: POSTGRES_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                  configMapKeyRef:
                      name: env-secret
                      key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                  configMapKeyRef:
                      name: env-config
                      key: POSTGRES_DB
            - name: POSTGRES_HOST
              valueFrom:
                  configMapKeyRef:
                      name: env-config
                      key: POSTGRES_HOST
            - name: AWS_REGION
              valueFrom:
                  configMapKeyRef:
                      name: env-config
                      key: AWS_REGION
            - name: AWS_PROFILE
              valueFrom:
                  configMapKeyRef:
                      name: env-config
                      key: AWS_PROFILE
            - name: AWS_BUCKET
              valueFrom:
                  configMapKeyRef:
                      name: env-config
                      key: AWS_BUCKET
            - name: JWT_SECRET
              valueFrom:
                  configMapKeyRef:
                      name: env-config
                      key: JWT_SECRET
          ports:
            - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
    name: reverseproxy
    labels:
        app: reverseproxy
spec:
    ports:
        - name: "8080"
          port: 8080
          targetPort: 8080
          protocol: TCP
    selector:
        app: reverseproxy
