apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      run: frontend
  replicas: 2
  template:
    metadata:
      labels:
        run: frontend
    spec:
      containers:
      - name: frontend
        image: docker.io/volavl/udagram-frontend:latest
        ports: 
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "2048Mi"
            cpu: "500m"
        env:
          - name: POSTGRES_USERNAME
            valueFrom:
                configMapKeyRef:
                    name: env-secret
                    key: POSTGRES_USERNAME
          - name: POSTGRES_PASSWORD
            valueFrom:
                configMapKeyRef:
                    name: env-secret
                    key: POSTGRES_PASSWORD
          - name: POSTGRES_DB
            valueFrom:
                configMapKeyRef:
                    name: env-config
                    key: POSTGRES_DB
          - name: POSTGRES_HOST
            valueFrom:
                configMapKeyRef:
                    name: env-config
                    key: POSTGRES_HOST
          - name: AWS_REGION
            valueFrom:
                configMapKeyRef:
                    name: env-config
                    key: AWS_REGION
          - name: AWS_PROFILE
            valueFrom:
                configMapKeyRef:
                    name: env-config
                    key: AWS_PROFILE
          - name: AWS_BUCKET
            valueFrom:
                configMapKeyRef:
                    name: env-config
                    key: AWS_BUCKET
          - name: JWT_SECRET
            valueFrom:
                configMapKeyRef:
                    name: env-config
                    key: JWT_SECRET

---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: frontend
  name: frontend
spec:
  ports:
  - name: "8100"
    port: 8100
    targetPort: 80
  selector:
    service: frontend